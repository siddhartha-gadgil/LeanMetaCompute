import MetaCompute.PowerMod

/-!
## Proving a big prime

We prove various results to show that `85083351022467190124442353598696803287939269665617` is prime.
-/

#eval powerMod 2 85083351022467190124442353598696803287939269665616 85083351022467190124442353598696803287939269665617 -- 1

theorem big : powerMod 2 85083351022467190124442353598696803287939269665616 85083351022467190124442353598696803287939269665617 = 1 := by
  simplify_power_mod 2 ^ 85083351022467190124442353598696803287939269665616 % 85083351022467190124442353598696803287939269665617

#check big -- powerMod 2 85083351022467190124442353598696803287939269665616 85083351022467190124442353598696803287939269665617 = 1

#eval 85083351022467190124442353598696803287939269665616/2

def big_false : ¬ powerMod 5 (85083351022467190124442353598696803287939269665616/2)  85083351022467190124442353598696803287939269665617 = 1 := by
  have := simplify_power_mod# 5 ^  (85083351022467190124442353598696803287939269665616/2) %  85083351022467190124442353598696803287939269665617
  rw [this]
  simp

#eval 85083351022467190124442353598696803287939269665616/13 -- 6544873155574399240341719507592061791379943820432

def big_false' : ¬ powerMod 5 (85083351022467190124442353598696803287939269665616/13)  85083351022467190124442353598696803287939269665617 = 1 := by
  have := simplify_power_mod# 5 ^  6544873155574399240341719507592061791379943820432 %  85083351022467190124442353598696803287939269665617
  rw [this]
  simp
